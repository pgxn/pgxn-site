Frequently Asked Questions
==========================

Releasing on PGXN
-----------------

<span id="extension"></span>
WTF is an “extension”?
:   An extension is a piece of software that adds functionality to PostgreSQL itself. Examples are data types ([citext](http://www.postgresql.org/docs/current/static/citext.html), [hstore](http://www.postgresql.org/docs/current/static/hstore.html)), utilities ([dblink](http://www.postgresql.org/docs/current/static/dblink.html), [pgTAP](/extension/pgtap)), and procedural languages ([PL/Perl](http://www.postgresql.org/docs/current/static/plperl.html), [PL/R](http://www.joeconway.com/plr/)), among others. See [Extending SQL](http://www.postgresql.org/docs/8.4/static/extend.html) for details. An extension is *not* a piece of software designed to run on top of PostgreSQL ([Bricolage](http://www.bricolagecms.org/), [Drupal](http://drupal.org/)).

<span id="allowed"></span>
What’s allowed to be released on PGXN?
:    Open-source PostgreSQL extension release packages. The [How To](http://manager.pgxn.org/howto) documents the contents of such packages. Following the [CPAN example](http://www.cpan.org/misc/ZCAN.html), “no commercial software of any kind, not even share/guilt/donateware, will be allowed…any other policy would be open to nitpicking, or maybe even legal challenges.”

<span id="notallowed"></span>
What’s not allowed to be released on PGXN?

:   Non-package files (that is, files that are not tarballs, bzip-balls, or zip archives), closed-source distributions, and distributions with no license.
                   
<span id="whocanrelease"></span>
Who can release on PGXN?

:   Any registered user.

<span id="whocanregister"></span>
Who can register for PGXN?

:   Anyone who applies. Such registrations will be approved by volunteers, but we’re usually pretty quick to respond to requests.
                   
<span id="howtoapply"></span>
So how do I apply?

:   Head on over to [PGXN Manager](http://manager.pgxn.org/) and hit the “[Request Account](http://manager.pgxn.org/account/register)” link. Once you’ve signed up, unless you’re obviously a [troll](http://trolluniversity.com/), your account will be quickly approved.
                   
<span id="releaseapproval"></span>
Okay, I have an account and want to release an extension. Is there a release approval process?

:   Short answer: No, because PGXN needs to [KISS](http://en.wikipedia.org/wiki/KISS_principle). Longer answer: No. Again following the [CPAN example](http://www.cpan.org/misc/ZCAN.html), PGXN “will stay an open and free forum, where the authors decide what they upload. Any further selection belongs to different fora.” This is because “[the first goal](http://use.perl.org/comments.pl?sid=9630&cid=14713) of PGXN is to make it easy to submit code and redistribute it. Ease of use and quality control are not the central problems ~[it~] tries to solve.” Frankly, moderation of releases is a significant reason that other communities have failed to duplicate the success of CPAN.
                   
<span id="howto"></span>
Great, so how do I create an extension distribution and release it?

:   Basically, you upload an archive file with a [META.json](/spec/) file describing the distribution. Have a look at the [How To](http://manager.pgxn.org/howto) for all the details.

<span id="maillist">
Is there some place I can go to ask questions and get help from like-minded PGXN contributors?

Yes, there is a [Google Group](http://groups.google.com/group/pgxn-users) for this very purpose. Join us!

<span id="pgfoundry"></span>
How is PGXN different from pgFoundry?

:   [pgFoundry](http://www.pgfoundry.org/) is for project hosting and includes SCM, issue tracking, mailing lists, web hosting, and mirrored download support for any project related to PostgreSQL. PGXN is for extensions distribution and mirroring, easy downloading and installation, documentation and metadata, and searching and reporting. The only thing in common with pgFoundry is uploading release packages. They otherwise serve very different purposes (project management vs. distribution and exposure).
                   
<span id="goodbadugly"></span>
How does PGXN make it easy to distinguish the garbage from the viable extensions?

:   The first step is the PGXN search engine, accessible via the [home page](/), which will allow you to find extensions relevant to you and to read their documentation. This will “often ~[be~] enough to distinguish the good stuff from the crap,” as Robert Haas [says](http://archives.postgresql.org/pgsql-www/2010-01/msg00057.php). As more extensions are released on PGXN with competing features and functionality, the addition of ratings features and dedicated testing will also make it easier to evaluate competing options.

PGXN Client
-----------

<span id="commandlineclient"></span>
Is there a command-line client for installing extensions from PGXN?

:   There is! Install it with this command:
:   <pre>sudo easy_install pgxnclient</pre>
:   Then you can install PGXN extensions with a simple command:
:   <pre>pgxn install pair</pre>
:   Run `pgxn help` to get a list of supported commands; or check out the introductory [blog](http://blog.pgxn.org/post/5026314153/writing-a-client-for-pgxn) [posts](http://blog.pgxn.org/post/5118152273/new-release-for-the-pgxn-client), the [complete documentation](http://pgxnclient.projects.postgresql.org/) or the [source code](https://github.com/dvarrazzo/pgxnclient).
                   
<span id="howclientworks"></span>
How will the command-line client work?

:   It will use the JSON-based API available on every PGXN mirror to find, download, build, and install extensions. It will rely on [PGXS](http://www.postgresql.org/docs/current/static/xfunc-c.html#XFUNC-C-PGXS) to do the heavy lifting.
                   
<span id="clientwindows"></span>
What about Windows?

:   The PGXN client will always follow the lead of the PostgreSQL core on installing extensions. If support for installing extensions on Windows improves such that a compiler is no longer required, the PGXN client will be modified as appropriate to take advantage of it. This applies not specifically to Windows, but to the ability of the core installer (or any future community-supported installer) to work on <em>any</em> platform.
                   
<span id="clientsecurity"></span>
What kind of security does PGXN have?

:   Each release package has an accompanying SHA1 hash that the PGXN client will verify before installing an extension.

Contributing to PGXN
--------------------

<span id="license"></span>
Under what license is PGXN’s source code distributed?

:   [The PostgreSQL License](http://www.postgresql.org/about/licence). Note that the actual extensions themselves may be under any open source license, according to their authors.

<span id="contribute"></span>
Can other people contribute to PGXN?

:   Definitely! Contributions and help with refining the specification are very welcome. Major code contributions may be funded out of the PGXN fund based on circumstances. Any contributions must be submitted under The PostgreSQL License.
                   
<span id="owners"></span>
Who owns and runs PGXN?

:   Currently, PGXN is hosted on a box owned by [Kineticode](http://www.kineticode.com/), using bandwidth provided by [Command Prompt](http://www.commandprompt.com/). Hopefully the PostgreSQL.org Web Team eventually run PGXN on community servers. If they choose not to administrate it, PGXN will be run on one or more servers to be contributed to the PostgreSQL Fund at [SPI, Inc.](http://www.spi-inc.org/) In any case, the PGXN master index and server will be owned by a PostgreSQL-related nonprofit organization.
                   
<span id="source"></span>
Where is the PGXN source code hosted?

:   [On GitHub](https://github.com/pgxn/). Please feel free to fork and send pull requests!
                   
<span id="language"></span>
What language is PGXN written in?

:   Mostly Perl. The database used by [PGXN Manager](http://manager.pgxn.org/) is written in SQL, PL/pgSQL, and PL/Perl (and even uses [semver](/extension/semver), a [semantic version](http://semver.org/) data type written in C and distributed right here on PGXN!)
                   
<span id="api"></span>
Is there an API?

:   Yes! We’re working on the documentation for it now.
